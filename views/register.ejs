<%- include('./partials/header.ejs') %>

<style>
  .auth-container {
    background: linear-gradient(135deg, #18181b 0%, #27272a 100%);
  }

  .auth-card {
    background: rgba(39, 39, 42, 0.9);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .auth-input {
    background: #3f3f46;
    transition: all 0.2s;
  }

  .auth-input:focus {
    background: #52525b;
    border-color: #dc2626;
    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
  }

  .auth-btn {
    background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
    transition: all 0.2s;
  }

  .auth-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 6px -1px rgba(220, 38, 38, 0.1),
      0 2px 4px -1px rgba(220, 38, 38, 0.06);
  }

  .auth-btn:active {
    transform: translateY(0);
  }

  .auth-link {
    color: #a1a1aa;
    transition: color 0.2s;
  }

  .auth-link:hover {
    color: #f4f4f5;
  }

  .ri-icon {
    color: #dc2626;
  }

  .toggle-password {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    color: #a1a1aa;
    transition: color 0.2s;
  }

  .toggle-password:hover {
    color: #f4f4f5;
  }
</style>

<div
  class="min-h-screen auth-container flex items-center justify-center p-4 sm:p-6"
>
  <div
    class="w-full max-w-md auth-card px-6 py-8 sm:px-12 sm:py-10 rounded-2xl md:rounded-[30px] shadow-xl"
  >
    <!-- Logo and Header -->
    <div class="text-center mb-8">
      <i class="ri-lightbulb-flash-line ri-4x ri-icon mb-4"></i>
      <h1 class="text-3xl sm:text-4xl font-bold text-zinc-100 mb-2">
        Welcome to Inspira
      </h1>
      <p class="text-zinc-400 text-sm">
        Where ideas spark and creativity flows
      </p>
    </div>

    <!-- Registration Form -->
    <form id="register-form" class="space-y-5">
      <!-- Name Field -->
      <div class="relative">
        <i
          class="ri-user-line absolute left-4 top-1/2 transform -translate-y-1/2 text-zinc-400"
        ></i>
        <input
          class="w-full pl-12 pr-4 py-3 auth-input text-zinc-100 rounded-lg border border-zinc-700 focus:outline-none"
          type="text"
          name="name"
          id="name"
          placeholder="Full Name"
          required
        />
      </div>

      <!-- Username Field -->
      <div class="relative">
        <i
          class="ri-at-line absolute left-4 top-1/2 transform -translate-y-1/2 text-zinc-400"
        ></i>
        <input
          class="w-full pl-12 pr-4 py-3 auth-input text-zinc-100 rounded-lg border border-zinc-700 focus:outline-none"
          type="text"
          name="username"
          id="username"
          placeholder="Username"
          required
        />
      </div>

      <!-- Email Field -->
      <div class="relative">
        <i
          class="ri-mail-line absolute left-4 top-1/2 transform -translate-y-1/2 text-zinc-400"
        ></i>
        <input
          class="w-full pl-12 pr-4 py-3 auth-input text-zinc-100 rounded-lg border border-zinc-700 focus:outline-none"
          type="email"
          name="email"
          id="email"
          placeholder="Email Address"
          required
        />
      </div>

      <!-- Password Field with Toggle -->
      <div class="relative">
        <i
          class="ri-lock-line absolute left-4 top-1/2 transform -translate-y-1/2 text-zinc-400"
        ></i>
        <input
          class="w-full pl-12 pr-12 py-3 auth-input text-zinc-100 rounded-lg border border-zinc-700 focus:outline-none"
          type="password"
          name="password"
          id="password"
          placeholder="Password"
          required
        />
        <i
          class="ri-eye-off-line toggle-password"
          id="togglePassword"
          onclick="togglePasswordVisibility()"
        ></i>
      </div>

      <!-- Submit Button -->
      <button
        type="submit"
        class="w-full px-4 py-3 auth-btn text-white font-semibold rounded-lg"
      >
        Create Account
      </button>
    </form>

    <!-- Terms and Conditions -->
    <p class="text-xs text-zinc-400 text-center mt-6">
      By continuing, you agree to Inspira's
      <a href="#" class="auth-link">Terms of Service</a> and acknowledge you've
      read our <a href="#" class="auth-link">Privacy Policy</a>.
    </p>

    <!-- Login Link -->
    <div class="mt-6 text-center">
      <p class="text-sm text-zinc-400">
        Already have an account?
        <a href="/" class="auth-link font-medium">Log in</a>
      </p>
    </div>
  </div>
</div>

<script>
  function togglePasswordVisibility() {
    const passwordInput = document.getElementById("password");
    const toggleIcon = document.getElementById("togglePassword");
    if (passwordInput.type === "password") {
      passwordInput.type = "text";
      toggleIcon.classList.remove("ri-eye-off-line");
      toggleIcon.classList.add("ri-eye-line");
    } else {
      passwordInput.type = "password";
      toggleIcon.classList.remove("ri-eye-line");
      toggleIcon.classList.add("ri-eye-off-line");
    }
  }

  document
    .getElementById("register-form")
    .addEventListener("submit", async (e) => {
      e.preventDefault();
      console.log("Register form submitted");
      const name = document.getElementById("name").value;
      const username = document.getElementById("username").value;
      const email = document.getElementById("email").value;
      const password = document.getElementById("password").value;

      try {
        console.log("Sending fetch to /users/register:", {
          name,
          username,
          email,
        });
        const response = await fetch("/users/register", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ name, username, email, password }),
        });
        console.log("Fetch response status:", response.status);
        const data = await response.json();
        console.log("Response data:", data);

        if (data.success) {
          Toastify({
            text: "Registration successful! Redirecting to profile...",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#10b981",
          }).showToast();
          setTimeout(() => (window.location.href = "/profile"), 3000);
        } else {
          Toastify({
            text: data.message || "Registration failed",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#ef4444",
          }).showToast();
        }
      } catch (error) {
        console.error("Fetch error:", error);
        Toastify({
          text: "An error occurred. Please try again.",
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: "#ef4444",
        }).showToast();
      }
    });
</script>

<%- include('./partials/footer.ejs') %>
